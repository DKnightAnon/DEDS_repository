CREATE TRIGGER Staff_Training_Insert_TR
ON STAFF_TRAINING
INSTEAD OF INSERT
AS
DECLARE @COURSE_FK int
DECLARE @COURSE_FSK int

DECLARE @SATISFACTION_FK int
DECLARE @SATISFACTION_FSK int
DECLARE @SATISFACTION_YEAR int
DECLARE @SATISFACTION_STAFF_CODE int

DECLARE @TIMESTAMP DATETIME

SELECT @COURSE_FK = COURSE_CODE_FK FROM INSERTED
SELECT @SATISFACTION_FK = SATISFACTION_TYPE_CODE_FK FROM INSERTED
SELECT @TIMESTAMP = CAST(GETDATE() AS DATETIME)--TIMESTAMP FROM INSERTED
SELECT @SATISFACTION_YEAR = YEAR_PK from INSERTED
SELECT @SATISFACTION_STAFF_CODE = SALES_STAFF_CODE_PK FROM INSERTED

SELECT @COURSE_FSK = (SELECT top(1) ID_SK FROM COURSE 
        WHERE COURSE.COURSE_CODE_FK = @COURSE_FK
        AND COURSE.TIMESTAMP < @TIMESTAMP
        ORDER BY COURSE.TIMESTAMP DESC)


SELECT @SATISFACTION_FSK = (SELECT top(1) ID_SK FROM SATISFACTION
        WHERE SATISFACTION.YEAR_PK = @SATISFACTION_YEAR
        AND SATISFACTION.SALES_STAFF_CODE = @SATISFACTION_STAFF_CODE
        AND SATISFACTION.TIMESTAMP < @TIMESTAMP
        ORDER BY SATISFACTION.TIMESTAMP DESC)


BEGIN
	INSERT INTO STAFF_TRAINING
		(
		YEAR_PK, 
		SALES_STAFF_CODE_PK,
		FULL_NAME,
		POSITION_EN,
		COURSE_CODE_FK,
		COURSE_CODE_FSK,
		SATISFACTION_TYPE_CODE_FK,
		SATISFACTION_TYPE_CODE_FSK
		)
	SELECT 
		YEAR_PK,
		SALES_STAFF_CODE_PK,
		FULL_NAME,
		POSITION_EN,
		COURSE_CODE_FK,
		@COURSE_FSK AS 'COURSE_CODE_FSK',
		SATISFACTION_TYPE_CODE_FK, 
		@SATISFACTION_FSK AS 'SATISFACTION_TYPE_CODE_FSK'
	FROM INSERTED

	--SELECT * FROM INSERTED
	--PRINT 'Test'

	--SELECT * FROM INSERTED

	--SELECT @COURSE_FSK AS 'COURSE_FSK', @SATISFACTION_FSK AS 'SATISFACTION_FSK',
	--	   @COURSE_FK AS 'COURSE_FK', @SATISFACTION_FK AS 'SATISFACTION_FK',
	--	   @TIMESTAMP AS 'TIMESTAMP'


END;

CREATE TRIGGER TRAINING_TEST
ON STAFF_TRAINING
AFTER INSERT
AS
BEGIN
SELECT * FROM INSERTED
END

-- BREAKLINE

SELECT top(10) * FROM SATISFACTION 
WHERE SATISFACTION.TIMESTAMP < CAST(getdate() AS DATETIME)
ORDER BY SATISFACTION.TIMESTAMP DESC;


PRINT CAST(getdate() AS DATETIME);


SELECT top(10) * FROM STAFF_TRAINING 
ORDER BY STAFF_TRAINING.TIMESTAMP DESC



INSERT INTO STAFF_TRAINING
(YEAR_PK, SALES_STAFF_CODE_PK,FULL_NAME,POSITION_EN,COURSE_CODE_FK,SATISFACTION_TYPE_CODE_FK)
VALUES(2004, 100,'Tuomas, TESTING','Level 2 Sales Representative	',2, 1)

use GreatOutdoorsDW

SELECT top(1) ID_SK FROM COURSE 
        WHERE COURSE.COURSE_CODE_FK = 4
        AND COURSE.TIMESTAMP < CAST(GETDATE() AS DATETIME)
        ORDER BY COURSE.TIMESTAMP DESC


SELECT * FROM COURSE